definitions:
  batch.DeleteRequest:
    properties:
      cards:
        items:
          type: integer
        type: array
      connections:
        items:
          type: integer
        type: array
      id:
        type: integer
      nodes:
        items:
          type: integer
        type: array
      projectId:
        type: integer
    type: object
  batch.SaveRequest:
    properties:
      cards:
        items:
          $ref: '#/definitions/graph.DBEventCard'
        type: array
      connections:
        items:
          $ref: '#/definitions/graph.DBConnection'
        type: array
      id:
        type: integer
      nodes:
        items:
          $ref: '#/definitions/graph.DBNode'
        type: array
      projectId:
        type: integer
    type: object
  batch.SaveResponse:
    properties:
      cards:
        items:
          $ref: '#/definitions/graph.DBEventCard'
        type: array
      connections:
        items:
          $ref: '#/definitions/graph.DBConnection'
        type: array
      id:
        type: integer
      nodes:
        items:
          $ref: '#/definitions/graph.DBNode'
        type: array
      projectId:
        type: integer
    type: object
  call.CallbackRequest:
    properties:
      context:
        additionalProperties: true
        type: object
      event:
        $ref: '#/definitions/graph.DataEvent'
      raw:
        type: object
    type: object
  call.CallbackResponse:
    properties:
      error:
        type: string
      noExecutions:
        type: boolean
      response:
        type: object
      scheduled:
        type: boolean
      timeout:
        type: boolean
    type: object
  common.ProjectModel:
    properties:
      id:
        type: integer
      projectId:
        type: integer
    type: object
  endpoint.Container:
    properties:
      map:
        additionalProperties:
          $ref: '#/definitions/endpoint.Endpoint'
        type: object
    type: object
  endpoint.DBEndpoint:
    properties:
      headers:
        type: string
      id:
        type: integer
      module:
        type: string
      projectId:
        type: integer
      query:
        type: string
      uri:
        type: string
    type: object
  endpoint.Endpoint:
    properties:
      headers:
        additionalProperties:
          type: string
        type: object
      module:
        type: string
      uri:
        type: string
      values:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
    type: object
  graph.DBConnection:
    properties:
      graphId:
        type: integer
      id:
        type: integer
      localId:
        description: Placement
        type: integer
      name:
        type: string
      projectId:
        type: integer
      sourceId:
        type: integer
      sourcePort:
        type: string
      targetId:
        type: integer
      targetPort:
        type: string
      ui:
        type: string
    type: object
  graph.DBEventCard:
    properties:
      contextId:
        type: string
      contextType:
        type: string
      graphId:
        type: integer
      httpVote:
        type: integer
      id:
        type: integer
      initiatorId:
        type: string
      initiatorType:
        type: string
      name:
        type: string
      ownerId:
        type: string
      ownerType:
        type: string
      platform:
        type: string
      projectId:
        type: integer
      resourceId:
        type: string
      resourceType:
        type: string
      slidePort:
        type: string
      staticId:
        type: string
      staticType:
        type: string
      targetId:
        description: Placement
        type: integer
      ui:
        type: string
    type: object
  graph.DBGraph:
    properties:
      cards:
        items:
          $ref: '#/definitions/graph.DBEventCard'
        type: array
      connections:
        items:
          $ref: '#/definitions/graph.DBConnection'
        type: array
      counter:
        type: integer
      id:
        type: integer
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/graph.DBNode'
        type: array
      projectId:
        type: integer
      ui:
        type: string
    type: object
  graph.DBNode:
    properties:
      arguments:
        type: string
      function:
        type: string
      graphId:
        type: integer
      id:
        type: integer
      localId:
        description: Placement
        type: integer
      module:
        description: Invocation
        type: string
      name:
        type: string
      projectId:
        type: integer
      ui:
        type: string
    type: object
  graph.DataEvent:
    properties:
      contextId:
        type: string
      contextType:
        type: string
      initiatorId:
        type: string
      initiatorType:
        type: string
      ownerId:
        type: string
      ownerType:
        type: string
      platform:
        type: string
      resourceId:
        type: string
      resourceType:
        type: string
      staticId:
        type: string
      staticType:
        type: string
    type: object
  graph.GraphObject:
    properties:
      graphId:
        type: integer
      id:
        type: integer
      projectId:
        type: integer
    type: object
  search.ActiveGraph:
    properties:
      active:
        items:
          $ref: '#/definitions/graph.DBEventCard'
        type: array
      graph:
        $ref: '#/definitions/graph.DBGraph'
    type: object
  search.FindActiveRequest:
    properties:
      contextId:
        type: string
      contextType:
        type: string
      initiatorId:
        type: string
      initiatorType:
        type: string
      ownerId:
        type: string
      ownerType:
        type: string
      platform:
        type: string
      resourceId:
        type: string
      resourceType:
        type: string
      staticId:
        type: string
      staticType:
        type: string
    type: object
  search.FindActiveResponse:
    properties:
      graphs:
        items:
          $ref: '#/definitions/search.ActiveGraph'
        type: array
    type: object
  storage.ListGraphResponse:
    properties:
      graphs:
        items:
          $ref: '#/definitions/graph.DBGraph'
        type: array
    type: object
info:
  contact: {}
paths:
  /batch:
    delete:
      parameters:
      - description: delete request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/batch.DeleteRequest'
      responses:
        "200":
          description: ok
          schema:
            type: string
    post:
      parameters:
      - description: save request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/batch.SaveRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/batch.SaveResponse'
  /callback:
    post:
      parameters:
      - description: callback
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/call.CallbackRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.CallbackResponse'
  /connection:
    delete:
      parameters:
      - description: connection id
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/graph.GraphObject'
      responses:
        "200":
          description: ok
          schema:
            type: string
    post:
      parameters:
      - description: connection
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/graph.DBConnection'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/graph.DBConnection'
  /endpoint:
    delete:
      parameters:
      - description: endpoint id
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.ProjectModel'
      responses:
        "200":
          description: ok
          schema:
            type: string
    post:
      parameters:
      - description: endpoint
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoint.DBEndpoint'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.DBEndpoint'
  /endpoint/list:
    get:
      parameters:
      - description: project id
        in: query
        name: projectId
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoint.Container'
  /event-card:
    delete:
      parameters:
      - description: event card id
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/graph.GraphObject'
      responses:
        "200":
          description: ok
          schema:
            type: string
    post:
      parameters:
      - description: connection
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/graph.DBEventCard'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/graph.DBEventCard'
  /find-active:
    post:
      parameters:
      - description: active event
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/search.FindActiveRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/search.FindActiveResponse'
  /graph:
    delete:
      parameters:
      - description: graph id
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/common.ProjectModel'
      responses:
        "200":
          description: ok
          schema:
            type: string
    get:
      parameters:
      - description: project id
        in: query
        name: projectId
        required: true
        type: integer
      - description: graph id
        in: query
        name: graphId
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/graph.DBGraph'
    post:
      parameters:
      - description: graph
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/graph.DBGraph'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/graph.DBGraph'
  /graph/list:
    get:
      parameters:
      - description: project ids
        in: query
        items:
          type: integer
        name: projectId
        required: true
        type: array
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/storage.ListGraphResponse'
  /node:
    delete:
      parameters:
      - description: node id
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/graph.GraphObject'
      responses:
        "200":
          description: ok
          schema:
            type: string
    post:
      parameters:
      - description: node
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/graph.DBNode'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/graph.DBNode'
swagger: "2.0"
