// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/batch": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "BatchSave",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/batch.SaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/batch.SaveResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "BatchDelete",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/batch.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/batch.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/call": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Execute callback",
                "operationId": "Call",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/execution.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/execution.Response"
                        }
                    }
                }
            }
        },
        "/connection": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "SaveConnection",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/graph.DBConnection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/graph.DBConnection"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "DeleteConnection",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/event-card": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "SaveEventCard",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/graph.DBEventCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/graph.DBEventCard"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "DeleteEventCard",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/find-active": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "FindActive",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/search.FindActiveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/search.FindActiveResponse"
                        }
                    }
                }
            }
        },
        "/graph": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get graph with nodes, connections and event cards",
                "operationId": "GetGraph",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.GetGraphRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.GetGraphResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "SaveGraph",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/graph.DBGraph"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/graph.DBGraph"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "DeleteGraph",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteResponse"
                        }
                    }
                }
            }
        },
        "/list-graphs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List graphs",
                "operationId": "ListGraph",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "project ids",
                        "name": "projectId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ListGraphResponse"
                        }
                    }
                }
            }
        },
        "/node": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "SaveNode",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/graph.DBNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/graph.DBNode"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Save all nodes, connections and event cards",
                "operationId": "DeleteNode",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.DeleteResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "batch.DeleteRequest": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "graphId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "projectId": {
                    "type": "integer"
                }
            }
        },
        "batch.DeleteResponse": {
            "type": "object"
        },
        "batch.SaveRequest": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBEventCard"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBConnection"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBNode"
                    }
                },
                "projectId": {
                    "type": "integer"
                }
            }
        },
        "batch.SaveResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBEventCard"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBConnection"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBNode"
                    }
                },
                "projectId": {
                    "type": "integer"
                }
            }
        },
        "execution.Request": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": true
                },
                "event": {
                    "$ref": "#/definitions/graph.DataEvent"
                },
                "raw": {
                    "type": "object"
                }
            }
        },
        "execution.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "noExecutions": {
                    "type": "boolean"
                },
                "response": {
                    "type": "object"
                },
                "scheduled": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "boolean"
                }
            }
        },
        "graph.DBConnection": {
            "type": "object",
            "properties": {
                "graphId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "localId": {
                    "description": "Placement",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "sourceId": {
                    "type": "integer"
                },
                "sourcePort": {
                    "type": "string"
                },
                "targetId": {
                    "type": "integer"
                },
                "targetPort": {
                    "type": "string"
                },
                "ui": {
                    "type": "string"
                }
            }
        },
        "graph.DBEventCard": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "contextType": {
                    "type": "string"
                },
                "graphId": {
                    "type": "integer"
                },
                "httpVote": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "initiatorId": {
                    "type": "string"
                },
                "initiatorType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "ownerType": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "slidePort": {
                    "type": "string"
                },
                "staticId": {
                    "type": "string"
                },
                "staticType": {
                    "type": "string"
                },
                "targetId": {
                    "description": "Placement",
                    "type": "integer"
                },
                "ui": {
                    "type": "string"
                }
            }
        },
        "graph.DBGraph": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBEventCard"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBConnection"
                    }
                },
                "counter": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBNode"
                    }
                },
                "projectId": {
                    "type": "integer"
                },
                "ui": {
                    "type": "string"
                }
            }
        },
        "graph.DBNode": {
            "type": "object",
            "properties": {
                "arguments": {
                    "type": "string"
                },
                "function": {
                    "type": "string"
                },
                "graphId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "localId": {
                    "description": "Placement",
                    "type": "integer"
                },
                "module": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "type": {
                    "description": "Invocation",
                    "type": "string"
                },
                "ui": {
                    "type": "string"
                }
            }
        },
        "graph.DataEvent": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "contextType": {
                    "type": "string"
                },
                "initiatorId": {
                    "type": "string"
                },
                "initiatorType": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "ownerType": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "staticId": {
                    "type": "string"
                },
                "staticType": {
                    "type": "string"
                }
            }
        },
        "search.ActiveGraph": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBEventCard"
                    }
                },
                "graph": {
                    "$ref": "#/definitions/graph.DBGraph"
                }
            }
        },
        "search.FindActiveRequest": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "contextType": {
                    "type": "string"
                },
                "initiatorId": {
                    "type": "string"
                },
                "initiatorType": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "ownerType": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "staticId": {
                    "type": "string"
                },
                "staticType": {
                    "type": "string"
                }
            }
        },
        "search.FindActiveResponse": {
            "type": "object",
            "properties": {
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/search.ActiveGraph"
                    }
                }
            }
        },
        "storage.DeleteRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "projectId": {
                    "type": "integer"
                }
            }
        },
        "storage.DeleteResponse": {
            "type": "object"
        },
        "storage.GetGraphRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "projectId": {
                    "type": "integer"
                }
            }
        },
        "storage.GetGraphResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBEventCard"
                    }
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBConnection"
                    }
                },
                "counter": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBNode"
                    }
                },
                "projectId": {
                    "type": "integer"
                },
                "ui": {
                    "type": "string"
                }
            }
        },
        "storage.ListGraphResponse": {
            "type": "object",
            "properties": {
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/graph.DBGraph"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Flow server",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
